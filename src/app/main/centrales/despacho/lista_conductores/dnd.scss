/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.dnd-conductores{
    min-width: 220px;
}

.dnd-conductores ul[dnd-list]{
    -webkit-padding-start: 0px !important;
}

.dnd-conductores ul[dnd-list] > li {
	position: relative;
    border-radius: $radio !important;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
/*.dnd-conductores ul[dnd-list] {*/
    /*border: 0;*/
    /*min-height: 42px;*/
    /*padding-left: 0px;*/
/*}*/

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.dnd-conductores ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.dnd-conductores ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: $primary-color;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.dnd-conductores ul[dnd-list] li {
    text-align: center;
    background-color: #EDEDED;
    /*border: 1px solid #ddd;*/
    display: block;
    /*padding: 10px 15px;*/
    /*margin: 2px 2px;*/
    float: left;
    height: 145px;
    width: 100%;
    min-width: 220px;
    /*zoom: 85%;*/
    margin-bottom: 10px;
}

/**
 * Show selected elements in green
 */
.dnd-conductores ul[dnd-list] li.selected {
    background-color: #EDEDED;
    color: #3c763d;
}
